name: CI ‚Äî Next.js TypeScript

on:
  # CI classique sur chaque PR vers main
  pull_request:
    branches:
      - main

  # Hook d√©clench√© quand une PR est ferm√©e (pour le d√©ploiement apr√®s merge)
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  check_branch:
    # V√©rifie que seule la branche dev peut ouvrir une PR vers main
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check branch source
        if: github.base_ref == 'main' && github.head_ref != 'dev'
        run: |
          echo "‚ùå ERROR: You can only merge into main from the 'dev' branch."
          exit 1

  ci:
    if: github.event_name == 'pull_request'
    name: Tests & Build
    needs: check_branch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint (ESLint)
        run: npm run lint --if-present

      - name: Type check (tsc)
        run: npm run type-check --if-present

      - name: Run tests
        run: npm test --if-present

      - name: Build (Next.js)
        run: npm run build --if-present

  deploy:
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    name: Deploy (after merge to main)
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment webhook (Render / autre)
        if: ${{ secrets.RENDER_HOOK_URL != '' }}
        run: |
          echo "üöÄ Deployment triggered after merge to main"
          curl -s -X POST "${{ secrets.RENDER_HOOK_URL }}" -o /dev/null -w "%{http_code}\n"
